/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package simeav;

import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Observable;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JSlider;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeSelectionModel;
import org.opencv.core.Mat;
import org.opencv.core.MatOfByte;
import org.opencv.highgui.Highgui;

/**
 *
 * @author Nacha
 */
public class InterfazGrafica extends javax.swing.JFrame implements java.util.Observer, TreeSelectionListener{

    /**
     * Creates new form InterfazGrafica
     */
    public InterfazGrafica() {
    }
    
    public void inicializar(Modelo modelo){
        this.modelo = modelo;
        this.modelo.addObserver(this);
        initComponents();
        arbolResultados.getSelectionModel().setSelectionMode
                (TreeSelectionModel.SINGLE_TREE_SELECTION);
        arbolResultados.addTreeSelectionListener(this);
    }

    @Override
    public void update(Observable o, Object arg) {
        Etapa[] etapas = Etapa.values();
        HashMap<Etapa, Mat> imagenes = modelo.getImagenes();
        for(int i = 0; i < etapas.length; i++){
            if(rootArbolResultados.getChildCount() <= i){
                DefaultMutableTreeNode nodo;
                nodo = new DefaultMutableTreeNode(etapas[i], false);
                rootArbolResultados.add(nodo);
            }
            else {
                DefaultMutableTreeNode node = (DefaultMutableTreeNode)rootArbolResultados.getChildAt(i);
                node.setUserObject(etapas[i]);
            }
        }
        arbolResultados.setRootVisible(true);
        arbolResultados.expandRow(0);
        arbolResultados.setRootVisible(false);
    }    
    
    @Override
    public void valueChanged(TreeSelectionEvent e) {
        DefaultMutableTreeNode node = (DefaultMutableTreeNode)
                           arbolResultados.getLastSelectedPathComponent();

        if (node == null) return;

        Object nodeInfo = node.getUserObject();
        if (node.isLeaf()) {
            Mat imagen = modelo.getImagenes().get((Etapa)nodeInfo);
            mostrar(imagen);
        }
    }

    private void mostrar(Mat im) {
        MatOfByte matOfByte = new MatOfByte();
        Highgui.imencode(".jpg", im, matOfByte); 
        byte[] byteArray = matOfByte.toArray();
        try {
            InputStream in = new ByteArrayInputStream(byteArray);
            BufferedImage bufImage = ImageIO.read(in);
            ImageIcon image = new ImageIcon(bufImage);
            imagen.setIcon(image);
        } catch (IOException e) {
        }
    }
    
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        rootArbolResultados = new DefaultMutableTreeNode("Root");
        arbolResultados = new javax.swing.JTree(rootArbolResultados);
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panelVisualizador = new javax.swing.JPanel();
        imagen = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        sliderUmbral = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        sliderRadio = new javax.swing.JSlider();
        botonProcesar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuItemAbrir = new javax.swing.JMenuItem();
        menuItemGuardar = new javax.swing.JMenuItem();
        menuItemSalir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setMinimumSize(new java.awt.Dimension(130, 0));

        arbolResultados.setDoubleBuffered(true);
        arbolResultados.setRootVisible(false);
        jScrollPane2.setViewportView(arbolResultados);

        jLabel3.setBackground(new java.awt.Color(255, 0, 0));
        jLabel3.setMaximumSize(new java.awt.Dimension(30, 30));
        jLabel3.setMinimumSize(new java.awt.Dimension(30, 30));
        jLabel3.setOpaque(true);
        jLabel3.setPreferredSize(new java.awt.Dimension(30, 30));

        jLabel4.setText("Usa");

        jLabel5.setBackground(new java.awt.Color(0, 255, 255));
        jLabel5.setOpaque(true);

        jLabel6.setText("Agregación");

        jLabel7.setBackground(new java.awt.Color(0, 0, 255));
        jLabel7.setOpaque(true);

        jLabel8.setText("Extensión");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap())
        );

        jSplitPane2.setLeftComponent(jPanel2);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(800, 600));

        panelVisualizador.setAutoscrolls(true);
        panelVisualizador.setMinimumSize(new java.awt.Dimension(800, 600));
        panelVisualizador.setPreferredSize(new java.awt.Dimension(800, 600));

        imagen.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        imagen.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        imagen.setDoubleBuffered(true);

        javax.swing.GroupLayout panelVisualizadorLayout = new javax.swing.GroupLayout(panelVisualizador);
        panelVisualizador.setLayout(panelVisualizadorLayout);
        panelVisualizadorLayout.setHorizontalGroup(
            panelVisualizadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelVisualizadorLayout.createSequentialGroup()
                .addComponent(imagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 844, Short.MAX_VALUE))
        );
        panelVisualizadorLayout.setVerticalGroup(
            panelVisualizadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imagen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(panelVisualizador);

        jSplitPane2.setRightComponent(jScrollPane1);

        jToolBar1.setMaximumSize(new java.awt.Dimension(32780, 80));
        jToolBar1.setMinimumSize(new java.awt.Dimension(49, 80));
        jToolBar1.setPreferredSize(new java.awt.Dimension(100, 80));

        jLabel1.setText("Umbral");
        jToolBar1.add(jLabel1);

        sliderUmbral.setMajorTickSpacing(25);
        sliderUmbral.setMaximum(255);
        sliderUmbral.setMinorTickSpacing(5);
        sliderUmbral.setPaintLabels(true);
        sliderUmbral.setPaintTicks(true);
        sliderUmbral.setValue(0);
        sliderUmbral.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderUmbralStateChanged(evt);
            }
        });
        jToolBar1.add(sliderUmbral);

        jLabel2.setText("Radio");
        jToolBar1.add(jLabel2);

        sliderRadio.setMajorTickSpacing(10);
        sliderRadio.setMaximum(80);
        sliderRadio.setMinorTickSpacing(1);
        sliderRadio.setPaintLabels(true);
        sliderRadio.setPaintTicks(true);
        sliderRadio.setValue(32);
        sliderRadio.setMaximumSize(new java.awt.Dimension(32767, 59));
        sliderRadio.setMinimumSize(new java.awt.Dimension(36, 59));
        sliderRadio.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderRadioStateChanged(evt);
            }
        });
        jToolBar1.add(sliderRadio);

        botonProcesar.setText("Procesar");
        botonProcesar.setEnabled(false);
        botonProcesar.setFocusable(false);
        botonProcesar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        botonProcesar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        botonProcesar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botonProcesarMouseClicked(evt);
            }
        });
        jToolBar1.add(botonProcesar);

        jMenu1.setText("Archivo");

        menuItemAbrir.setText("Abrir");
        menuItemAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAbrirActionPerformed(evt);
            }
        });
        jMenu1.add(menuItemAbrir);

        menuItemGuardar.setText("Guardar");
        menuItemGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemGuardarActionPerformed(evt);
            }
        });
        jMenu1.add(menuItemGuardar);

        menuItemSalir.setText("Salir");
        jMenu1.add(menuItemSalir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 985, Short.MAX_VALUE)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemAbrirActionPerformed
        int returnVal = selectorArchivos.showOpenDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
           Mat im;
           modelo.setImagenOriginal(selectorArchivos.getSelectedFile());
           mostrar(modelo.preprocesar(sliderUmbral.getValue()));
           umbralada = false;
           separada = false;
           botonProcesar.setEnabled(false);
           arbolResultados.setRootVisible(true);
           arbolResultados.collapseRow(0);
           arbolResultados.setRootVisible(false);
        }
    }//GEN-LAST:event_menuItemAbrirActionPerformed

    private void menuItemGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemGuardarActionPerformed
        int returnVal = selectorArchivos.showSaveDialog(this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
           modelo.guardar(selectorArchivos.getSelectedFile());
        }
    }//GEN-LAST:event_menuItemGuardarActionPerformed

    private void sliderRadioStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderRadioStateChanged
        if (modelo.inicializado()){    
            JSlider slider = (JSlider)evt.getSource();
            int radio = slider.getValue();
            mostrar(modelo.separarTexto(radio));
            if (this.umbralada){
                botonProcesar.setEnabled(true);
            }
            this.separada = true;
        }
    }//GEN-LAST:event_sliderRadioStateChanged

    private void botonProcesarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botonProcesarMouseClicked
        modelo.procesar();
    }//GEN-LAST:event_botonProcesarMouseClicked

    private void sliderUmbralStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderUmbralStateChanged
        if (modelo.inicializado()){    
            JSlider slider = (JSlider)evt.getSource();
            int umbral = slider.getValue();
            mostrar(modelo.preprocesar(umbral));
            if(this.separada){
                botonProcesar.setEnabled(true);
            }
            this.umbralada = true;
        }
    }//GEN-LAST:event_sliderUmbralStateChanged

  


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private DefaultMutableTreeNode rootArbolResultados;
    private javax.swing.JTree arbolResultados;
    private javax.swing.JButton botonProcesar;
    private javax.swing.JLabel imagen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JMenuItem menuItemAbrir;
    private javax.swing.JMenuItem menuItemGuardar;
    private javax.swing.JMenuItem menuItemSalir;
    private javax.swing.JPanel panelVisualizador;
    private javax.swing.JSlider sliderRadio;
    private javax.swing.JSlider sliderUmbral;
    // End of variables declaration//GEN-END:variables
    // Elementos del arbolResultados
    private JFileChooser selectorArchivos = new JFileChooser();
    private Modelo modelo = new Modelo();
    private boolean umbralada = false;
    private boolean separada = false;


}
